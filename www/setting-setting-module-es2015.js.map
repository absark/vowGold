{"version":3,"sources":["./src/app/main/setting/setting.page.html","./src/app/main/setting/update-password/update-password.component.html","./src/app/main/setting/update-user/update-user.component.html","./src/app/main/setting/setting-routing.module.ts","./src/app/main/setting/setting.module.ts","./src/app/main/setting/setting.page.scss","./src/app/main/setting/setting.page.ts","./src/app/main/setting/update-password/update-password.component.ts","./src/app/main/setting/update-user/update-user.component.ts"],"names":[],"mappings":"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","file":"setting-setting-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-menu-button slot=\\\"start\\\"></ion-menu-button>\\n    <ion-title>Setting</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n <ion-grid class=\\\"gradient\\\" style=\\\"height: 100%;\\\">\\n   <ion-row>\\n     <ion-col size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"mt-5\\\">\\n      <ion-item (click)=\\\"onupdateUser()\\\" style=\\\"border-radius: 5px;margin-bottom: 5px;\\\" *ngIf=\\\"userRole !== 'admin'\\\">\\n     \\n        <ion-icon name=\\\"person-add-sharp\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label *ngIf=\\\"user!==null\\\" class=\\\"text-primary\\\">Update Profile</ion-label>\\n      \\n       </ion-item>\\n       <ion-item (click)=\\\"onPasswordUpdate()\\\" style=\\\"border-radius: 5px;margin-bottom: 5px;\\\">\\n    \\n        <ion-icon name=\\\"cloud-upload-sharp\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label *ngIf=\\\"user!==null\\\" class=\\\"text-primary\\\">Change Password</ion-label>\\n      \\n       </ion-item>\\n       \\n     </ion-col>\\n   </ion-row>\\n </ion-grid>\\n</ion-content>\\n\"","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Update Profile</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-icon name=\\\"close-outline\\\" slot=\\\"icon-only\\\" (click)=\\\"onDismiss()\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid class=\\\"gradient\\\" style=\\\"height: 100%;\\\">\\n    <ion-row class=\\\"mt-5\\\">\\n      <ion-col size-sm=\\\"8\\\" offset-sm=\\\"2\\\">\\n        <form  class=\\\"ion-padding-horizontal\\\" [formGroup]=\\\"updatePassword\\\" (ngSubmit)=\\\"onSubmit(updatePassword)\\\">\\n          <div class=\\\"d-flex column\\\">\\n      \\n            <div class=\\\"mb-2\\\">\\n              <input type=\\\"password\\\" \\n              placeholder=\\\"Current Password\\\" \\n              class=\\\"form-control\\\" \\n              formControlName=\\\"passwordCurrent\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && updatePassword.get('passwordCurrent').errors }\\\" \\n               >\\n               <div *ngIf=\\\"submitted && updatePassword.get('passwordCurrent').hasError('required')\\\"\\n               class=\\\"invalid-feedback\\\">\\n                User name required !</div>\\n            </div>\\n            \\n              \\n          \\n           \\n            <div class=\\\"mb-2\\\">\\n              <input type=\\\"password\\\"\\n               placeholder=\\\"Password\\\" \\n               class=\\\"form-control\\\"  \\n               formControlName=\\\"password\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && updatePassword.get('password').errors }\\\" \\n               >\\n               <div *ngIf=\\\"submitted && updatePassword.get('password').errors\\\" class=\\\"invalid-feedback\\\">\\n               <div *ngIf=\\\"updatePassword.get('password').hasError('required')\\\">\\n                   Password is required !\\n               </div>\\n               <div *ngIf=\\\" updatePassword.get('password').hasError('minLength')\\\">\\n                 Password must be at least 6 characters !\\n               </div>\\n              </div>\\n            \\n            </div>\\n\\n            <div class=\\\"mb-2\\\">\\n              <input type=\\\"password\\\"\\n               placeholder=\\\"Confirm Password\\\"\\n               class=\\\"form-control\\\" \\n               formControlName=\\\"passwordConfirm\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && updatePassword.get('passwordConfirm').errors }\\\" \\n               >\\n               <div\\n               *ngIf=\\\"submitted && updatePassword.get('passwordConfirm').errors\\\"\\n               class=\\\"invalid-feedback\\\">\\n              <div \\n              *ngIf=\\\"updatePassword.get('passwordConfirm').hasError('required')\\\">\\n               Confirm password is required !\\n              </div>\\n              <div \\n              *ngIf=\\\" updatePassword.get('passwordConfirm').hasError('mustMatch')\\\">\\n              Confirm password must match !\\n              </div>\\n             </div>\\n            </div>\\n      \\n      \\n            \\n           \\n            <ion-button type=\\\"submit\\\">Update Password</ion-button>\\n        \\n          </div>\\n      \\n        </form>\\n        <div class=\\\"alert alert-success mt-2 text-center\\\" role=\\\"alert\\\" *ngIf=\\\"updated\\\">\\n         Successfully updated !\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\"","export default \"<style>\\n   .icon-color{\\n    color: var(--ion-color-primary);\\n  }\\n  .text{\\n    font-size:12px\\n  }\\n</style>\\n\\n<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Update Profile</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-icon name=\\\"close-outline\\\" slot=\\\"icon-only\\\" (click)=\\\"onDismiss()\\\"></ion-icon>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid style=\\\"height:100%\\\" class=\\\"gradient\\\">\\n    <ion-row>\\n      <ion-col size-sm=\\\"8\\\" offset-sm=\\\"2\\\" class=\\\"mt-5\\\">\\n        <form  class=\\\"ion-padding-horizontal\\\" [formGroup]=\\\"updateUser\\\" (ngSubmit)=\\\"onSubmit(updateUser)\\\">\\n          <div class=\\\"d-flex column\\\">\\n      \\n            <div class=\\\"mb-2\\\">\\n              <input type=\\\"text\\\" \\n              placeholder=\\\"User Name\\\" \\n              class=\\\"form-control\\\" \\n              formControlName=\\\"name\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && updateUser.get('name').errors }\\\" \\n               >\\n               <div *ngIf=\\\"submitted && updateUser.get('name').hasError('required')\\\"\\n               class=\\\"invalid-feedback\\\">\\n                User name required !</div>\\n            </div>\\n            \\n              \\n          \\n           \\n            <div class=\\\"mb-2\\\">\\n              <input type=\\\"text\\\"\\n               placeholder=\\\"Email Address \\\" \\n               class=\\\"form-control\\\"  \\n               formControlName=\\\"email\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && updateUser.get('email').errors }\\\" \\n               >\\n               <div\\n                *ngIf=\\\"submitted && updateUser.get('email').errors\\\"\\n                class=\\\"invalid-feedback\\\">\\n               <div \\n               *ngIf=\\\"updateUser.get('email').hasError('required')\\\">\\n                Email address is required !\\n               </div>\\n               <div \\n               *ngIf=\\\" updateUser.get('email').hasError('email')\\\">\\n                Please enter valid email address !\\n               </div>\\n              </div>\\n            \\n            \\n            </div>\\n            <div class=\\\"mb-2\\\">\\n              <input type=\\\"number\\\"\\n               placeholder=\\\"Mobile\\\"\\n               class=\\\"form-control\\\" \\n               formControlName=\\\"mobile\\\"\\n               [ngClass]=\\\"{ 'is-invalid': submitted && updateUser.get('mobile').errors }\\\" \\n               >\\n               <div\\n               *ngIf=\\\"submitted && updateUser.get('mobile').errors\\\"\\n               class=\\\"invalid-feedback\\\">\\n              <div \\n              *ngIf=\\\"updateUser.get('mobile').hasError('required')\\\">\\n              Mobile no. is required !\\n              </div>\\n              <div \\n              *ngIf=\\\" updateUser.get('mobile').hasError('pattern')\\\">\\n              Mobile no. must be 10 digits !\\n              </div>\\n             </div>\\n            </div>\\n            <div class=\\\"mb-2\\\">\\n              <textarea\\n              type=\\\"text\\\"\\n              formControlName=\\\"address\\\"\\n              [ngClass]=\\\"{ 'is-invalid': submitted && updateUser.get('address').errors }\\\" \\n               placeholder=\\\"Address\\\"\\n               class=\\\"form-control\\\">\\n              </textarea>\\n              <div\\n              *ngIf=\\\"submitted && updateUser.get('address').errors\\\"\\n              class=\\\"invalid-feedback\\\">\\n             <div \\n             *ngIf=\\\"updateUser.get('address').hasError('required')\\\">\\n              Address is required !\\n             </div>\\n            \\n            </div>\\n            </div>\\n      \\n            <div style=\\\"border-radius: 5px; background: white;\\\" class=\\\"mb-2\\\">\\n              <span for=\\\"files\\\" class=\\\"btn\\\" (click)=\\\"pancard.click()\\\" [ngClass]=\\\"{'icon-color': panCard_selected}\\\">Select Pancard</span>\\n              <input #pancard style=\\\"display: none;\\\" type=\\\"file\\\" (change)=\\\"getPancard($event)\\\">\\n          </div>\\n\\n          <div style=\\\"border-radius: 5px; background: white;\\\">\\n            <span for=\\\"files\\\" class=\\\"btn\\\" (click)=\\\"adhaarcard.click()\\\"[ngClass]=\\\"{'icon-color': adhaarCard_selected}\\\">Select Adhaarcard</span>\\n            <input #adhaarcard style=\\\"display: none;\\\" type=\\\"file\\\" (change)=\\\"getAdhaar($event)\\\">\\n          </div>\\n           \\n            <ion-button type=\\\"submit\\\" class=\\\"mt-3\\\">Update</ion-button>\\n        \\n          </div>\\n      \\n        </form>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingPage } from './setting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingPageRoutingModule } from './setting-routing.module';\n\nimport { SettingPage } from './setting.page';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    SettingPageRoutingModule,\n    HttpClientModule\n  ],\n  declarations: [SettingPage,UpdateUserComponent,UpdatePasswordComponent],\n  entryComponents:[UpdateUserComponent,UpdatePasswordComponent]\n})\nexport class SettingPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vc2V0dGluZy9zZXR0aW5nLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ModalController, LoadingController } from '@ionic/angular';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { UpdatePasswordComponent } from './update-password/update-password.component';\nimport { SharedService } from '../services/shared.service';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.page.html',\n  styleUrls: ['./setting.page.scss'],\n})\nexport class SettingPage implements OnInit {\n    user:any = null;\n    userRole;\n  constructor(\n        private auth:AuthService,\n        private service: SharedService,\n        private modalCtrl: ModalController,\n        private loading:LoadingController\n        )\n         { \n          this.userRole = this.auth.userRole;\n         }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter(){\n    this.loading.create({\n      message:'Loading...'\n    }).then(el=>{el.present()})\n    if(this.auth.user){\n      this.service.getUser().subscribe(res => {\n        this.user = res.user;\n        this.loading.dismiss();\n      },\n      err=>{\n        this.auth.showAlert(err.error.message);\n        this.loading.dismiss();\n      }\n      )\n     }\n  }\n  \n  onupdateUser(){\n    this.modalCtrl.create({\n      component:UpdateUserComponent,\n      componentProps:{\n        name:this.user.name,\n        email:this.user.email,\n        mobile:this.user.mobile,\n        address:this.user.address,\n        pancard:this.user.panCard,\n        adhaarcard:this.user.adhaar\n      }\n    }).then( modal =>{\n      modal.present();\n      return modal.onDidDismiss()\n    }).then(user=>{\n     if(user.data!==undefined){\n      this.user = {...user.data};\n     }\n    })\n  }\n\n\n  onPasswordUpdate(){\n    this.modalCtrl.create({\n      component:UpdatePasswordComponent\n    }).then(modal =>{\n      modal.present();\n    })\n  }\n\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { AuthService } from '../../../services/auth.service';\nimport { MustMatch } from '../../../services/helper';\nimport { Storage } from '@ionic/storage';\nimport { SharedService } from '../../services/shared.service';\n@Component({\n  selector: 'app-update-password',\n  templateUrl: './update-password.component.html'\n})\nexport class UpdatePasswordComponent implements OnInit {\n  updated = false ;\n  updatePassword:FormGroup;\n  submitted = false;\n  constructor(\n    private auth: AuthService,\n    private modal:ModalController,\n    private formBuilder: FormBuilder,\n    private service: SharedService,\n    private storage:Storage\n    ) { \n     \n    }\n\n  ngOnInit() {\n    this.updatePassword = this.formBuilder.group({\n      passwordCurrent:[null,[Validators.required,Validators.minLength(6)]],\n      password:[null, [Validators.required,Validators.minLength(6)]],\n      passwordConfirm:[null,[Validators.required]]\n    },\n    {\n      validator: MustMatch('password', 'confirmPassword')\n  }\n    );\n  }\n async onSubmit(form:FormGroup){\n    this.submitted = true;\n   console.log(this.updatePassword.value);\n    // stop here if form is invalid\n    if (this.updatePassword.invalid) {\n        return;\n    }\n    this.service.updatePassword(this.updatePassword.value).subscribe(async res=>{\n      this.storage.remove('access_token');\n      this.updated = true;\n       setTimeout(()=>{\n        this.updated = false;\n        this.auth.logout();\n       this.modal.dismiss();\n       \n       },2000);\n       \n    },\n    err=>{\n      this.auth.showAlert(err.error.message);\n    });\n    \n}\n\nonDismiss(){\n  this.modal.dismiss();\n}\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SharedService } from '../../services/shared.service';\nimport { environment } from 'src/environments/environment';\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html'\n})\nexport class UpdateUserComponent implements OnInit {\n  url = environment.url;\n  // Data passed in by componentProps\n  @Input() name: string;\n  @Input() email: string;\n  @Input() mobile: number ;\n  @Input() address: string;\n  @Input() pancard: string ;\n  @Input() adhaarcard: number ;\n  updateUser:FormGroup;\n  panCard_selected;\n  adhaarCard_selected;\n  submitted = false;\n  constructor(\n    private modal:ModalController,\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private service: SharedService\n    ) { }\n\n  ngOnInit() {\n    this.updateUser = this.formBuilder.group({\n      name:[this.name,[Validators.required]],\n      email:[this.email, [Validators.required,Validators.email]],\n      mobile:[this.mobile,[Validators.required,Validators.pattern(/^\\d{10}$/)]],\n      address:[this.address,[Validators.required]],\n      panCard:[this.pancard,[Validators.required]],\n      adhaar:[this.adhaarcard,[Validators.required]]\n    }\n    );\n  }\n  onSubmit(form:FormGroup){\n    this.submitted = true;\n    if (this.updateUser.invalid) return;\n    const userData = new FormData();\n    if(typeof(this.updateUser.get('panCard').value) === 'object' || typeof(this.updateUser.get('adhaar').value)==='object'){\n    userData.append(\"name\",this.updateUser.value.name);\n    userData.append(\"email\",this.updateUser.value.email);\n    userData.append(\"password\", this.updateUser.value.password);\n    userData.append(\"passwordConfirm\", this.updateUser.value.passwordConfirm);\n    userData.append(\"mobile\", this.updateUser.value.mobile);\n    userData.append(\"address\", this.updateUser.value.address);\n    userData.append(\"panCard\", this.updateUser.value.panCard);\n    userData.append(\"adhaar\", this.updateUser.value.adhaar);\n    this.service.updateUser(userData)\n      .subscribe(res=>{\n      this.modal.dismiss(res.user);\n      },\n      err=>{\n        this.auth.showAlert(err.error.message);\n      });\n    } else{\n      this.service.updateUser(this.updateUser.value)\n      .subscribe(res=>{\n      this.modal.dismiss(res.user);\n      },\n      err=>{\n        this.auth.showAlert(err.error.message);\n      });\n    }\n\n   \n}\n\ngetPancard(event:Event){\n  const file = (event.target as HTMLInputElement).files[0];\n  this.panCard_selected = file;\n  this.updateUser.patchValue({panCard:file});\n\n}\ngetAdhaar(event:Event){\n  const file = (event.target as HTMLInputElement).files[0];\n  this.adhaarCard_selected = file;\n  this.updateUser.patchValue({adhaar:file});\n\n}\n\n  onDismiss(){\n    this.modal.dismiss();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}