{"version":3,"sources":["./src/app/auth/resetpassword/resetpassword.page.html","./src/app/auth/resetpassword/resetpassword-routing.module.ts","./src/app/auth/resetpassword/resetpassword.module.ts","./src/app/auth/resetpassword/resetpassword.page.scss","./src/app/auth/resetpassword/resetpassword.page.ts"],"names":[],"mappings":"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","file":"resetpassword-resetpassword-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>resetpassword</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<div class=\\\"mx-2\\\">\\n  <form  class=\\\"mt-5\\\" [formGroup]=\\\"resetPassword\\\" (ngSubmit)=\\\"onSubmit(resetPassword)\\\">\\n    <div class=\\\"mb-2\\\">\\n      <input type=\\\"text\\\"\\n       placeholder=\\\"Reset Token\\\"\\n       class=\\\"form-control\\\" \\n       formControlName=\\\"token\\\"\\n       [ngClass]=\\\"{ 'is-invalid': submitted && resetPassword.get('token').errors }\\\" \\n       >\\n       <div\\n       *ngIf=\\\"submitted && resetPassword.get('token').errors\\\"\\n       class=\\\"invalid-feedback\\\">\\n      <div \\n      *ngIf=\\\"resetPassword.get('token').hasError('required')\\\">\\n       Token is required !\\n      </div>\\n    \\n     </div>\\n    </div>\\n\\n  \\n    <div class=\\\"mb-2\\\">\\n      <input type=\\\"text\\\"\\n       placeholder=\\\"Password\\\"\\n       class=\\\"form-control\\\" \\n       formControlName=\\\"password\\\"\\n       [ngClass]=\\\"{ 'is-invalid': submitted && resetPassword.get('password').errors }\\\" \\n       >\\n       <div\\n       *ngIf=\\\"submitted && resetPassword.get('password').errors\\\"\\n       class=\\\"invalid-feedback\\\">\\n      <div \\n      *ngIf=\\\"resetPassword.get('password').hasError('required')\\\">\\n       Password is required !\\n      </div>\\n      <div \\n      *ngIf=\\\" resetPassword.get('password').hasError('minlength')\\\">\\n      Password must be at least 6 characters !\\n      </div>\\n     </div>\\n    </div>\\n\\n\\n    <div class=\\\"mb-2\\\">\\n      <input type=\\\"text\\\"\\n       placeholder=\\\"Confirm Password\\\"\\n       class=\\\"form-control\\\" \\n       formControlName=\\\"passwordConfirm\\\"\\n       [ngClass]=\\\"{ 'is-invalid': submitted && resetPassword.get('passwordConfirm').errors }\\\" \\n       >\\n       <div\\n       *ngIf=\\\"submitted && resetPassword.get('passwordConfirm').errors\\\"\\n       class=\\\"invalid-feedback\\\">\\n      <div \\n      *ngIf=\\\"resetPassword.get('passwordConfirm').hasError('required')\\\">\\n       Confirm password is required !\\n      </div>\\n      <div \\n      *ngIf=\\\" resetPassword.get('passwordConfirm').hasError('mustMatch')\\\">\\n      Confirm password must match !\\n      </div>\\n     </div>\\n    </div>\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\">reset</ion-button>\\n    <div class=\\\"alert alert-success mt-2 text-center\\\" role=\\\"alert\\\" *ngIf=\\\"msg\\\">\\n      {{ 'Your password has reset !'}}\\n    </div>\\n  </form>\\n  <div class=\\\"d-flex mt-3\\\">\\n    <div>\\n      <strong>Note:</strong>\\n    </div>\\n    <div>\\n      Reset token has been send to your email address .\\n    </div>\\n  </div>\\n</div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetpasswordPage } from './resetpassword.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetpasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetpasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetpasswordPageRoutingModule } from './resetpassword-routing.module';\n\nimport { ResetpasswordPage } from './resetpassword.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ResetpasswordPageRoutingModule\n  ],\n  declarations: [ResetpasswordPage]\n})\nexport class ResetpasswordPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVzZXRwYXNzd29yZC9yZXNldHBhc3N3b3JkLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { MustMatch } from '../../services/helper';\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.page.html',\n  styleUrls: ['./resetpassword.page.scss'],\n})\nexport class ResetpasswordPage implements OnInit {\n\n  resetPassword:FormGroup;\n  submitted = false;\n  msg:boolean = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private auth:AuthService,\n    private loader:LoadingController,\n    private router:Router\n    ) { }\n\n  ngOnInit() {\n    this.resetPassword = this.formBuilder.group({\n      token:['',Validators.required],\n      password:['',[Validators.required,Validators.minLength(6)]],\n      passwordConfirm:['',[Validators.required]]\n    },\n    {\n      validator: MustMatch('password', 'confirmPassword')\n  });\n  }\n\n\n  onSubmit(form:FormGroup){\n    this.submitted = true;\n    this.loader.create({message:'Sending...'}).then(el =>{\n      el.present();\n    });\n    // stop here if form is invalid\n    if (this.resetPassword.invalid) {\n        return;\n    }\n    this.auth.resetPassword( this.resetPassword.get('token').value,\n    {\n      password:this.resetPassword.get('password').value,\n      passwordConfirm:this.resetPassword.get('passwordConfirm').value\n    }).subscribe(res =>{\n     this.loader.dismiss();\n     this.msg = true;\n     setTimeout(()=>{\n      this.router.navigate(['/','auth','signin']);\n      this.resetPassword.reset();\n    },2500);\n    },\n    err=>{\n      this.loader.dismiss();\n      this.auth.showAlert(err.message);\n    });\n}\n}\n"],"sourceRoot":"webpack:///"}