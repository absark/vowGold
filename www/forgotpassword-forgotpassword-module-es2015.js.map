{"version":3,"sources":["./src/app/auth/forgotpassword/forgotpassword.page.html","./src/app/auth/forgotpassword/forgotpassword-routing.module.ts","./src/app/auth/forgotpassword/forgotpassword.module.ts","./src/app/auth/forgotpassword/forgotpassword.page.scss","./src/app/auth/forgotpassword/forgotpassword.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,6mBAA8iB,gEAAgE,miB;;;;;;;;;;;;;;;;;;;ACAplB;AACc;AAEI;AAE3D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uEAAkB;KAC9B;CACF,CAAC;AAMF,IAAa,+BAA+B,GAA5C,MAAa,+BAA+B;CAAG;AAAlC,+BAA+B;IAJ3C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,+BAA+B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBH;AACM;AACM;AAER;AAEqC;AAEvB;AAW3D,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;CAAG;AAA3B,wBAAwB;IATpC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,kEAAmB;YACnB,0DAAW;YACX,8FAA+B;SAChC;QACD,YAAY,EAAE,CAAC,uEAAkB,CAAC;KACnC,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;ACnBrC;AAAe,6GAA8C,mK;;;;;;;;;;;;;;;;;;;;;ACAX;AACkB;AACR;AACT;AACV;AAOzC,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAK7B,YACU,WAAwB,EACxB,IAAgB,EAChB,MAAwB,EACxB,MAAa;QAHb,gBAAW,GAAX,WAAW,CAAa;QACxB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAkB;QACxB,WAAM,GAAN,MAAM,CAAO;QANvB,cAAS,GAAG,KAAK,CAAC;IAOZ,CAAC;IAEP,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,KAAK,EAAC,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;SACnD,CAAC;IACJ,CAAC;IAGD,QAAQ,CAAC,IAAc;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAC,OAAO,EAAC,YAAY,EAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YACnD,EAAE,CAAC,OAAO,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QACH,+BAA+B;QAC/B,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YAC7B,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAC,MAAM,EAAC,eAAe,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC7B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;CACA;;YAhCwB,0DAAW;YACnB,yEAAW;YACT,gEAAiB;YACjB,sDAAM;;AATZ,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,yOAAyC;;KAE1C,CAAC;2EAOuB,0DAAW;QACnB,yEAAW;QACT,gEAAiB;QACjB,sDAAM;GATZ,kBAAkB,CAsC9B;AAtC8B","file":"forgotpassword-forgotpassword-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/auth/signin\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Forgot Password</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content >\\n<div class=\\\"mx-2\\\">\\n  <form  class=\\\"mt-5\\\" [formGroup]=\\\"forgotPassword\\\" (ngSubmit)=\\\"onSubmit(forgotPassword)\\\">\\n   \\n    <div class=\\\"mb-2\\\">\\n      <input type=\\\"text\\\"\\n       placeholder=\\\"Email Address \\\" \\n       class=\\\"form-control\\\"  \\n       formControlName=\\\"email\\\"\\n       [ngClass]=\\\"{ 'is-invalid': submitted && forgotPassword.get('email').errors }\\\" \\n       >\\n       <div\\n        *ngIf=\\\"submitted && forgotPassword.get('email').errors\\\"\\n        class=\\\"invalid-feedback\\\">\\n       <div \\n       *ngIf=\\\"forgotPassword.get('email').hasError('required')\\\">\\n        Email address is required !\\n       </div>\\n       <div \\n       *ngIf=\\\" forgotPassword.get('email').hasError('email')\\\">\\n        Please enter valid email address !\\n       </div>\\n      </div>\\n    \\n    \\n    </div>\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\">next</ion-button>\\n  </form>\\n</div>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ForgotpasswordPage } from './forgotpassword.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotpasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotpasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ForgotpasswordPageRoutingModule } from './forgotpassword-routing.module';\n\nimport { ForgotpasswordPage } from './forgotpassword.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ForgotpasswordPageRoutingModule\n  ],\n  declarations: [ForgotpasswordPage]\n})\nexport class ForgotpasswordPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvZm9yZ290cGFzc3dvcmQvZm9yZ290cGFzc3dvcmQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { LoadingController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.page.html',\n  styleUrls: ['./forgotpassword.page.scss'],\n})\nexport class ForgotpasswordPage implements OnInit {\n\n  forgotPassword:FormGroup;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private auth:AuthService,\n    private loader:LoadingController,\n    private router:Router\n    ) { }\n\n  ngOnInit() {\n    this.forgotPassword = this.formBuilder.group({\n      email:['', [Validators.required,Validators.email]]\n    })\n  }\n\n\n  onSubmit(form:FormGroup){\n    this.submitted = true;\n    this.loader.create({message:'Sending...'}).then(el =>{\n      el.present();\n    });\n    // stop here if form is invalid\n    if (this.forgotPassword.invalid) {\n        return;\n    }\n    this.auth.forgotPassword(this.forgotPassword.value).subscribe(res =>{\n     this.loader.dismiss();\n     this.router.navigate(['/','auth','resetpassword']);\n     this.forgotPassword.reset();\n    },\n    err =>{\n      this.loader.dismiss();\n      this.auth.showAlert(err.message);\n    });\n}\n}\n"],"sourceRoot":"webpack:///"}